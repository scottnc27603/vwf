--- 
extends: http://vwf.example.com/navscene.vwf
children:
  origin:
    extends: http://vwf.example.com/node3.vwf
    source: OrientationCube.dae
    type: model/vnd.collada+xml
    properties:
      scale: [ 2, 2, 2 ]
  spherexp:
    extends: http://vwf.example.com/node3.vwf
    source: UnitSphereRed.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 100, 0, 0 ]
  sphereyp:
    extends: http://vwf.example.com/node3.vwf
    source: UnitSphereGreen.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, 100, 0 ]
  spherezp:
    extends: http://vwf.example.com/node3.vwf
    source: UnitSphereBlue.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, 0, 100 ]
  spherexn:
    extends: http://vwf.example.com/node3.vwf
    source: UnitSphereCyan.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ -100, 0, 0 ]
  sphereyn:
    extends: http://vwf.example.com/node3.vwf
    source: UnitSphereMagenta.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, -100, 0 ]
  spherezn:
    extends: http://vwf.example.com/node3.vwf
    source: UnitSphereYellow.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, 0, -100 ]
  cylinderxp:
    extends: http://vwf.example.com/node3.vwf
    source: UnitCylinderRed.dae
    type: model/vnd.collada+xml
  cylinderyp:
    extends: http://vwf.example.com/node3.vwf
    source: UnitCylinderGreen.dae
    type: model/vnd.collada+xml
  cylinderzp:
    extends: http://vwf.example.com/node3.vwf
    source: UnitCylinderBlue.dae
    type: model/vnd.collada+xml
  cylinderxn:
    extends: http://vwf.example.com/node3.vwf
    source: UnitCylinderCyan.dae
    type: model/vnd.collada+xml
  cylinderyn:
    extends: http://vwf.example.com/node3.vwf
    source: UnitCylinderMagenta.dae
    type: model/vnd.collada+xml
  cylinderzn:
    extends: http://vwf.example.com/node3.vwf
    source: UnitCylinderYellow.dae
    type: model/vnd.collada+xml
  dir1:
    extends: http://vwf.example.com/light.vwf
    implements:
    - http://vwf.example.com/glgeLight.vwf
    properties:
      lightType: "directional"
      distance: 2000
      intensity: 0.9
      color: [255,255,255]
      glge-constantAttenuation: 1
# Camera fix
scripts:
- |
  this.initialize = function() {
    this.camera.translation = [ 0, -50, 0 ];
    [ "x", "y", "z" ].forEach( function( axis ) {
      var angle = axis == "x" ? 0 : axis == "y" ? Math.PI / 2 : -Math.PI / 2;
      var vector = axis == "x" ? [ 0, 0, 1 ] : axis == "y" ? [ 0, 0, 1 ] : [ 0, 1, 0 ];
      this["cylinder"+axis+"p"].transform = goog.vec.Mat4.multMat(
        goog.vec.Mat4.multMat(
          goog.vec.Mat4.makeRotate.apply( undefined, [].concat( goog.vec.Mat4.create(), angle, vector ) ),
          goog.vec.Mat4.makeTranslate( goog.vec.Mat4.create(), 50, 0, 0 ),
          goog.vec.Mat4.create()
        ),
        goog.vec.Mat4.makeScale( goog.vec.Mat4.create(), 90, 1, 1 ),
        goog.vec.Mat4.create()
      );
      this["cylinder"+axis+"n"].transform = goog.vec.Mat4.multMat(
        goog.vec.Mat4.multMat(
          goog.vec.Mat4.makeRotate.apply( undefined, [].concat( goog.vec.Mat4.create(), angle + Math.PI, vector ) ),
          goog.vec.Mat4.makeTranslate( goog.vec.Mat4.create(), 50, 0, 0 ),
          goog.vec.Mat4.create()
        ),
        goog.vec.Mat4.makeScale( goog.vec.Mat4.create(), 90, 1, 1 ),
        goog.vec.Mat4.create()
      );
    }, this );
  }
