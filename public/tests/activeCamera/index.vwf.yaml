# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/scene.vwf
properties:
  navmode: none
  counter: 0
methods:
  update: 
children:
  duck:
    extends: http://vwf.example.com/node3.vwf
    source: duck.dae
    type: model/vnd.collada+xml
  camera:
    extends: http://vwf.example.com/camera.vwf
    properties:
  camera2:
    extends: http://vwf.example.com/camera.vwf
    properties:
  dir1:
    extends: http://vwf.example.com/light.vwf
    implements:
    - http://vwf.example.com/glgeLight.vwf
    properties:
      lightType: "point"
      distance: 2000
      intensity: 0.9
      color: [255,255,255]
      glge-constantAttenuation: 0
      rotation: [ 1, 0, 0, -45 ]
      translation: [0,-100,0]
scripts:
- | 
    this.initialize = function()
    {
        this.camera.rotation = [0,1,0,0];
        this.camera.translation = [0,-600,50];
        this.camera2.rotation = [0,0,1,90];
        this.camera2.translation = [500,0,50];
        this.dir1.translation = [0,-100,0];
        this.duck.translation = [0,0,0];

        //vwf.setProperty('index-vwf','activeCamera','camera2');
        this.future(0.2).update();
    }
    this.update = function()
    {
        if(this.counter == 0)
            this.activeCamera = "http-vwf-example-com-camera-vwf-camera";
        if(this.counter == 60)
            this.activeCamera = 'http-vwf-example-com-camera-vwf-camera2';   
        
        this.counter++;  
        if(this.counter == 120)            
            this.counter = 0;
        this.future(0.2).update();  
    }